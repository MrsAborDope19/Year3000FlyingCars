{"version":3,"sources":["components/TopNav/TopNav.js","components/SiteCarousel/SiteCarousel.js","components/VehicleBrowser/VehicleBrowser.js","components/Home/Home.js","components/Footer/Footer.js","components/DealerLocator/DealerLocator.js","components/TestFlightForm/TestFlightForm.js","components/VehicleDetail/VehicleDetail.js","components/ColorPicker/ColorPicker.js","components/ModelPickerCollapse/ModelPickerCollapse.js","components/ModelPicker/ModelPicker.js","components/EngineSelector/EngineSelector.js","components/BuildAndPriceImageRotator/BuildAndPriceImageRotator.js","components/BuildAndPrice/BuildAndPrice.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","props","toggle","bind","state","isOpen","this","setState","VehicleSelections","vehicleData","map","item","DropdownItem","key","detailKey","to","pathname","model","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","class","React","Component","SiteCarousel","activeIndex","next","previous","goToIndex","onExiting","onExited","animating","nextIndex","newIndex","slides","CarouselItem","carouselImage","src","alt","altText","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","items","onClickHandler","CarouselControl","direction","directionText","VehicleBrowser","Col","md","Math","ceil","length","Card","CardImg","top","width","thumbnail","CardBody","CardTitle","year","CardSubtitle","tagline","CardText","Numeral","msrp","format","Container","Row","Home","Footer","DealerLocator","searchTerm","dealerships","handleInputChange","onClearClicked","onListClick","Axios","get","then","res","stateCounter","data","reduce","dealerStateCount","dealer","catch","err","console","log","eventData","preventDefault","stateClicked","target","text","split","value","filteredStubData","filter","d","includes","searchBar","sm","size","offset","Form","FormGroup","InputGroup","Input","type","onChange","name","placeholder","InputGroupAddon","addonType","Button","Table","i","phone","String","dealershipName","address","city","zip","stateCounterMarkup","ListGroup","Object","keys","sort","ListGroupItem","tag","Badge","pill","TestFlightForm","showSuccess","showDanger","onSubmit","checked","post","customerName","email","budget","id","Alert","VehicleDetail","selectedVehicle","match","params","selectedVehicleData","vehicle","modelYear","description","ColorPicker","colors","selectedColor","selectColor","data-color","data-color-name","ModelPickerCollapse","collapse","Media","left","body","heading","options","engines","nmpg","data-model","data-msrp","selectVehicle","ModelPicker","dropdownOpen","prevState","EngineSelector","dropDownOpen","Dropdown","engine","data-engine","data-engine-cost","cost","data-engine-name","onEngineSelect","BuildAndPriceImageRotator","buildItems","url","Number","colorIndex","push","caption","slide","BuildAndPrice","selectEngine","toggleModal","determineProgress","computePrice","activeTab","userHasSelectedVehicle","selectedColorName","userHasSelectedColor","selectedEngine","selectedEngineName","userHasSelectedEngine","modal","done","engineCost","numberStepsCompleted","selected","getAttribute","engineName","tab","colorName","engineIndex","Progress","tabs","classnames","active","TabContent","TabPane","tabId","Modal","ModalHeader","ModalBody","ModalFooter","App","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a539083.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TopNav.css';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nclass TopNav extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n        isOpen: false\r\n    };\r\n}\r\n    toggle() {\r\n        this.setState({\r\n        isOpen: !this.state.isOpen\r\n    });\r\n}\r\n    render(){\r\n        const VehicleSelections = this.props.vehicleData.map((item) => {\r\n            return <DropdownItem key={item.detailKey}>\r\n            <Link to={{pathname: \"/detail/\" + item.detailKey}}>\r\n                {item.model}\r\n            </Link>\r\n            </DropdownItem>\r\n        }, this);\r\n        \r\n        return(<div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Flying Car Dealership</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/\"><i className=\"fas fa-hotel\"></i> Home</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                 <i className=\"fas fa-rocket\"></i> Flying Cars\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {VehicleSelections}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            <NavItem>\r\n               <NavLink href='/find-a-dealer'><i className=\"fas fa-thumbtack\"></i> Find a Dealer</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n               <NavLink href='/build-and-price'><i class=\"fas fa-cog\"></i> Build and Price</NavLink>\r\n            </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n        );\r\n    }\r\n}\r\n               \r\nexport default TopNav;","import React from 'react';\r\nimport './SiteCarousel.css';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\n\r\nclass SiteCarousel extends React.Component{\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: 0 };\r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.goToIndex = this.goToIndex.bind(this);\r\n    this.onExiting = this.onExiting.bind(this);\r\n    this.onExited = this.onExited.bind(this);\r\n  }\r\n\r\n  onExiting() {\r\n    this.animating = true;\r\n  }\r\n\r\n  onExited() {\r\n    this.animating = false;\r\n  }\r\n\r\n  next() {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === this.props.vehicleData - 1 ? 0 : this.state.activeIndex + 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  previous() {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === 0 ? this.props.vehicleData - 1 : this.state.activeIndex - 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  goToIndex(newIndex) {\r\n    if (this.animating) return;\r\n    this.setState({ activeIndex: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n\r\n    const slides = this.props.vehicleData.map((item) => {\r\n      return (\r\n        <CarouselItem\r\n          onExiting={this.onExiting}\r\n          onExited={this.onExited}\r\n          key={item.carouselImage}\r\n        >\r\n          <a href={\"/detail/\" + item.detailKey}>\r\n            <img src={item.carouselImage} className={\"carouselImage\"} alt={item.altText} />\r\n          </a>\r\n          <CarouselCaption captionText=\"\" captionHeader=\"\" />\r\n        </CarouselItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={this.next}\r\n        previous={this.previous}\r\n      >\r\n        <CarouselIndicators items={this.props.vehicleData} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\n                \r\nexport default SiteCarousel;","import React from 'react';\r\nimport './VehicleBrowser.css';\r\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, NavLink } from 'reactstrap';\r\nimport Numeral from 'numeral';\r\n\r\nclass VehicleBrowser extends React.Component{\r\n   \r\n    \r\n    render(){\r\n        const VehicleSelections = this.props.vehicleData.map((item) => {\r\n            return <Col key={item.detailKey + \"vb\"} md={Math.ceil(12 / this.props.vehicleData.length)}>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={item.thumbnail} alt={item.altText} />\r\n                            <CardBody>\r\n                                <CardTitle>{item.year} {item.model}</CardTitle>\r\n                                <CardSubtitle>{item.tagline}</CardSubtitle>\r\n                                <CardText>Start at {Numeral(item.msrp).format('$0,0')}</CardText>\r\n                                <NavLink href={\"/detail\" + item.detailKey}>Details</NavLink>\r\n                                <NavLink href=\"/build-and-price\">Build & Price</NavLink>\r\n                                <NavLink href=\"/find-a-dealer\">Dealers Near You</NavLink>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n        });\r\n        return (\r\n        <div className=\"vehicleBrowser\">\r\n            <Container>\r\n                <Row>\r\n                    {VehicleSelections}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VehicleBrowser;","import React from 'react';\r\nimport './Home.css';\r\nimport SiteCarousel from '../SiteCarousel';\r\nimport VehicleBrowser from '../VehicleBrowser';\r\n\r\nclass Home extends React.Component{\r\n  \r\n    \r\n    render(){\r\n        if(this.props.vehicleData){\r\n        return(\r\n        <div>\r\n            <SiteCarousel  vehicleData={this.props.vehicleData} />\r\n            <VehicleBrowser vehicleData={this.props.vehicleData} />\r\n        </div>\r\n        \r\n        );\r\n    } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n               \r\nexport default Home;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component{\r\n \r\n    \r\n    render(){\r\n        return <footer>\r\n            <a href=\"/schedule-test-flight\">Schedule a Test Flight! No pilot's license required</a>\r\n            </footer>\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Badge,\r\n    Table,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from 'reactstrap';\r\n// import { thisTypeAnnotation } from '@babel/types';\r\n\r\nclass DealerLocator extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { searchTerm: \"\", dealerships: null}\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onClearClicked = this.onClearClicked.bind(this);\r\n        this.onListClick = this.onListClick.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        Axios\r\n        .get('http://localhost:3001/dealerships')\r\n        .then( res => {\r\n            let stateCounter = res.data.reduce(\r\n                function(dealerStateCount, dealer){\r\n                    dealerStateCount[dealer.state] = (dealerStateCount[dealer.state] || 0) +1;\r\n                    return dealerStateCount;\r\n                }, this\r\n            );\r\n            this.setState({dealerships: res.data, stateCounter: stateCounter});\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    onListClick(eventData){\r\n        eventData.preventDefault();\r\n        const stateClicked = eventData.target.text.split(\" \")[0];\r\n        this.setState({ searchTerm: stateClicked});\r\n    }\r\n    \r\n    handleInputChange(eventData){\r\n        this.setState({ searchTerm: eventData.target.value });\r\n    }\r\n    \r\n    onClearClicked(eventData){\r\n        eventData.preventDefault();\r\n        this.setState({ searchTerm: ''});\r\n    }\r\n    render(){\r\n        if(this.state.dealerships){\r\n            const filteredStubData =this.state.dealerships.filter( d => d.state.includes(this.state.searchTerm));\r\n            let searchBar = <div>\r\n                <h1>Over {this.state.dealerships.length} Authorized Dealers Nationwide</h1>\r\n                <Row>\r\n                    <Col sm={12} md={{ size: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <InputGroup>\r\n                                    <Input type=\"text\" onChange={this.handleInputChange}\r\n                                        value = {this.state.searchTerm}\r\n                                        name = \"user_address\"\r\n                                        placeholder = \"We're probably nearby. What state are you in?\" />\r\n                                            \r\n                                        <InputGroupAddon addonType=\"append\">                                    \r\n                                            <Button onClick={this.onClearClicked}>X</Button>\r\n                                        </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n        \r\n        </div>\r\n        if(this.state.searchTerm.length < 4){\r\n            let stateCounterMarkup = null;\r\n            if(this.state.stateCounter){\r\n                stateCounterMarkup = <Row>\r\n                    <Col sm={12} md={{size: 10, offset: 1}}>\r\n                        <ListGroup>\r\n                            { Object.keys(this.state.stateCounter).sort().map(function (key, i){\r\n                                if(typeof this.state.stateCounter[key] === 'number'){\r\n                                    return (<ListGroupItem tag=\"a\" href=\"#\" key={key + i} onClick={this.onListClick} className='justify-content-between'>\r\n                                        {key} <Badge pill>{this.state.stateCounter[key]}</Badge>\r\n                                        </ListGroupItem>);\r\n                                }\r\n                            }, this)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                return(<div>\r\n                    {searchBar}\r\n                    {stateCounterMarkup}\r\n                </div>)\r\n            }\r\n        } else {\r\n            return(<div>\r\n                {searchBar}\r\n                   \r\n                   <Row>\r\n                    <Col sm={12} md={{size: 10, offset: 1}}>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Dealership</th>\r\n                                    <th>Address</th>\r\n                                    <th>City</th>\r\n                                    <th>State</th>\r\n                                    <th>Zip</th>\r\n                                    <th>Phone</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {filteredStubData.map( (item, i) => {\r\n                                    return(<tr key={item.phone}>\r\n                                        <td>{String(i)}</td>\r\n                                        <td>{item.dealershipName}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>{item.city}</td>\r\n                                        <td>{item.state}</td>\r\n                                        <td>{item.zip}</td>\r\n                                        <td>{item.phone}</td>\r\n                                    </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </Table>\r\n                </Col>\r\n            </Row>\r\n            \r\n            </div>);\r\n        }} else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DealerLocator;","import React from 'react';\r\nimport { Alert, InputGroup, InputGroupAddon, Card, CardText, CardBody, CardTitle,\r\nCardSubtitle, Button, Form, FormGroup, Input,\r\n} from 'reactstrap';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass TestFlightForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {showSuccess: false, showDanger: false}\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\nhandleInputChange(eventData){\r\n    const target = eventData.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({[name]: value})\r\n}\r\n\r\nonSubmit(eventData){\r\n    eventData.preventDefault();\r\n    Axios.post('http://localhost:3001/mailingList', {\r\n        customerName: this.state.customerName,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        budget: this.state.budget\r\n    }).then((res) => {\r\n        this.setState({showSuccess: true, showDanger: false});\r\n    }).catch((err) => {\r\n        this.setState({showSuccess: false, showDanger: true});\r\n    });\r\n}\r\n    render(){\r\n        return(<div>\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>Schedule a Test Flight</CardTitle>\r\n                        <CardSubtitle>No pilot's license required!</CardSubtitle>\r\n                            <CardText>Fill out the form fields below to schedule a test flight.</CardText>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" onChange={this.handleInputChange} name=\"customerName\" id=\"customerName\" placeholder=\"What is your name?\" />\r\n                                </FormGroup>\r\n                                <br />\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" onChange={this.handleInputChange} name=\"phone\" id=\"phone\" placeholder=\"What is your contact number?\" />\r\n                                </FormGroup>\r\n                                <br />\r\n                                <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\r\n                                <Input type=\"text\" onChange={this.handleInputChange} name=\"email\" id=\"email\" placeholder=\"What is your email?\" />\r\n                                </InputGroup>\r\n                                <br />\r\n                                <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\r\n                                <Input type=\"text\" onChange={this.handleInputChange} name=\"budget\" id=\"budget\" placeholder=\"Do you have a budget?\" />\r\n                                </InputGroup>\r\n                                <br />\r\n                            </Form>\r\n                            <br />\r\n                            <Button onClick={this.onSubmit}>Submit</Button>\r\n                            <Alert isOpen={this.state.showSuccess} color=\"success\">Your data were submitted successfully. Your test flight awaits!</Alert>\r\n                            <Alert isOpen={this.state.showDanger}color=\"danger\">Something went horribly wrong!</Alert>\r\n      \r\n                </CardBody>\r\n            </Card>\r\n        </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default TestFlightForm;","import React from 'react';\r\nimport './VehicleDetail.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nclass VehicleDetail extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {vehicleData: {}, selectedVehicle: \"\" }\r\n    }\r\n\r\n\r\n    render(){\r\n        const { selectedVehicle } = this.props.match.params;\r\n        const selectedVehicleData = this.props.vehicleData.filter((vehicle) => vehicle.detailKey === selectedVehicle)[0];\r\n\r\n        return(<div>\r\n            <Row>\r\n                <Col>\r\n                <img className = \"detailImg\" src={selectedVehicleData.thumbnail} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <h1>{selectedVehicleData.modelYear} {selectedVehicleData.model}</h1>\r\n                <h2>{selectedVehicleData.tagline}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12} md={{size: 6, offset: 3}}></Col>\r\n                <p>{selectedVehicleData.description}</p>\r\n            </Row>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default VehicleDetail;","import React from 'react';\r\nimport './ColorPicker.css';\r\nimport classnames from 'classnames';\r\nclass ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const selectedVehicleData = this.props.vehicleData.filter((vehicle) => vehicle.detailKey === this.props.selectedVehicle)[0];\r\n        console.log(selectedVehicleData);\r\n        if (selectedVehicleData) {\r\n            return (\r\n            <div className='colorBox'>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            {selectedVehicleData.colors.map(\r\n                                function(color, i){\r\n                                    return <td key={\"colorPicker-\" + color[1]}>\r\n                                        <img className={this.props.selectedColor === i ? 'colorBox selected' : 'colorBox'}\r\n                                        alt = {color[0]}\r\n                                        onClick = {this.props.selectColor}\r\n                                        data-color = {i}\r\n                                        data-color-name={color[0]}\r\n                                        src={color[1]} /><br />\r\n                    \r\n                                        <span>{color[0]}</span>\r\n                                    </td>\r\n                                }, this\r\n                            )}\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n            );\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport './ModelPickerCollapse.css';\r\nimport {\r\n    Collapse,\r\n    Media,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\nimport Numeral from 'numeral';\r\n\r\nclass ModelPickerCollapse extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = { collapse: false };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ collapse: !this.state.collapse });\r\n    }\r\n\r\n    render() {\r\n        const vehicle = this.props.selectedVehicle;\r\n        return (<div className=\"clickableMedia\">\r\n            <div className=\"vehicleSummary\" key={\"model-picker-\" + vehicle.detailKey}>\r\n                <Media>\r\n                    <Media left href=\"#\">\r\n                        <Media className=\"vehicleImage\" src={vehicle.thumbnail} alt=\"Generic placeholder image\" />\r\n                    </Media>\r\n                    <Media body className=\"vehicleData\">\r\n                        <Media heading className=\"vehicleTitle\">\r\n                            {vehicle.model}\r\n                        </Media>\r\n                        <div>\r\n                            {vehicle.tagline} <br /><br />\r\n                            <span>Starting at {Numeral(vehicle.msrp).format('$0,0')}</span><br />\r\n                            <span>{Numeral((vehicle.msrp) / 48).format('$0,0')} per month for 48 months</span><br />\r\n                            <span><i className=\"fas fa-gas-pump\"></i> {vehicle.options.engines[0].nmpg} NMPG</span>\r\n                        </div>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <NavLink onClick={this.toggle}>{this.state.collapse ? \"See Less\": \"See More\"}</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink data-model={vehicle.detailKey} data-color-name={vehicle.colors[0][0]} data-msrp={vehicle.msrp} onClick={this.props.selectVehicle}>Select</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Media>\r\n                </Media>\r\n                <Collapse key={\"model-picker-show\" + vehicle.detailKey}  isOpen={this.state.collapse}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            {vehicle.description}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Collapse>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModelPickerCollapse;","import React from 'react';\r\nimport './ModelPicker.css'\r\nimport ModelPickerCollapse from '../ModelPickerCollapse/ModelPickerCollapse';\r\nimport {\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\nclass ModelPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n          dropdownOpen: !prevState.dropdownOpen\r\n        }));\r\n      }\r\n\r\n      render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                    {this.props.vehicleData.map(function(vehicle, i){\r\n                        return <ModelPickerCollapse\r\n                        key={\"model-picker-\" + vehicle.detailKey}\r\n                        selectedVehicle={vehicle}\r\n                        selectVehicle={this.props.selectVehicle}\r\n                        />\r\n                    }, this)}\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModelPicker;\r\n\r\n//     render() {\r\n//         const selectedVehicleData = this.props.vehicleData.filter((vehicle) => vehicle.detailKey === this.props.selectedVehicle)[0];\r\n//         return <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n//         <DropdownToggle caret>\r\n//           Select a Powerplant\r\n//         </DropdownToggle>\r\n//         <DropdownMenu>\r\n//             {selectedVehicleData.options.engines.map(\r\n//                 function(engine, i){\r\n//                     return <DropdownItem\r\n//                     data-engine= {i}\r\n//                     data-engine-cost={engine.cost}\r\n//                     data-engine-name={engine.name}\r\n//                     onClick = {this.props.onEngineSelect}\r\n//                     key={engine.name}>\r\n//                         {engine.name}\r\n//                     </DropdownItem>\r\n//                 }, this\r\n//             )}\r\n//         </DropdownMenu>\r\n//       </Dropdown>\r\n//     }\r\n// }\r\n\r\n// export default ModelPicker;\r\n","import React from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nclass EngineSelector extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {dropDownOpen: false};\r\n    }\r\n\r\n    toggle(){\r\n        this.setState(prevState => ({\r\n            dropDownOpen: !prevState.dropDownOpen\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        const selectedVehicleData = this.props.vehicleData.filter((vehicle) => vehicle.detailKey === this.props.selectedVehicle)[0];\r\n        console.log(selectedVehicleData);\r\n        if (selectedVehicleData) {\r\n\r\n            return (\r\n                <div>\r\n                    <Dropdown isOpen={this.state.dropDownOpen} toggle={this.toggle}>\r\n                        <DropdownToggle caret>\r\n                            Select a Powerplant\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {selectedVehicleData.options.engines.map(\r\n                                function(engine, i){\r\n                                    return (<DropdownItem data-engine={i} data-engine-cost={engine.cost} data-engine-name={engine.name} onClick={this.props.onEngineSelect} key={engine.name}>{engine.name}</DropdownItem>);\r\n                                }, this)}\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default EngineSelector;\r\n","import React from 'react';\r\nimport './BuildAndPriceImageRotator.css';\r\nimport Numeral from 'numeral';\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\nclass BuildAndPriceImageRotator extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { activeIndex: 0 };\r\n        this.buildItems = this.buildItems.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.onExiting = this.onExiting.bind(this);\r\n        this.onExited = this.onExited.bind(this);\r\n    }\r\n\r\n    buildItems(){\r\n        const selectedVehicleData = this.props.vehicleData.filter((vehicle) => vehicle.detailKey === this.props.selectedVehicle)[0];\r\n        let items = [];\r\n        for(let i = 0; i < 21; i++){\r\n            //let's so this one step at a time so nobody (including me) gets hurt\r\n            let url = '/images/thumbnails/' + this.props.selectedVehicle;  //e.g. /images/thumbnails/jumper\r\n            url += '/' + this.props.selectedVehicle ;  //e.g. /images/thumbnails/jumper/jumper\r\n            url += '-' + selectedVehicleData.colors[Number(this.props.colorIndex)][2];  //e.g. /images/thumbnails/jumper/jumper-white\r\n            url += '-thumbnails' + Numeral(i).format('00') + \".jpg\"; //e.g. /images/thumbnails/jumper/jumper-white-thumbnails01.png\"\r\n            //console.log(url);\r\n            items.push({src: url, altText: \"\", caption: \"\"});\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    onExiting() {\r\n        this.animating = true;\r\n      }\r\n    \r\n      onExited() {\r\n        this.animating = false;\r\n      }\r\n    \r\n      next() {\r\n        if (this.animating) return;\r\n        const nextIndex = this.state.activeIndex === this.buildItems().length -1 ? 0 : this.state.activeIndex + 1;\r\n        this.setState({ activeIndex: nextIndex });\r\n      }\r\n    \r\n      previous() {\r\n        if (this.animating) return;\r\n        const nextIndex = this.state.activeIndex === 0 ? this.buildItems().length - 1 : this.state.activeIndex - 1;\r\n        this.setState({ activeIndex: nextIndex });\r\n      }\r\n    \r\n      goToIndex(newIndex) {\r\n        if (this.animating) return;\r\n        this.setState({ activeIndex: newIndex });\r\n      }\r\n\r\n    render(){\r\n        const { activeIndex } = this.state;\r\n        const items = this.buildItems();\r\n        const slides = items.map((item) => {\r\n          return (\r\n            <CarouselItem\r\n              onExiting={this.onExiting}\r\n              onExited={this.onExited}\r\n              key={item.src}>\r\n            <img className={\"buildAndPriceImage\"} src={item.src} alt={item.altText} />\r\n                <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n            </CarouselItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Carousel\r\n            slide = {false}\r\n            activeIndex={activeIndex}\r\n            next={this.next}\r\n            previous={this.previous}>\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n        </Carousel>\r\n    );\r\n}\r\n}\r\n\r\nexport default BuildAndPriceImageRotator;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport './BuildAndPrice.css';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport ModelPicker from '../ModelPicker/ModelPicker';\r\nimport EnginePicker from '../EngineSelector/EngineSelector';\r\nimport TestFlightForm from '../TestFlightForm/TestFlightForm';\r\nimport BuildAndPriceImageRotator from '../BuildAndPriceImageRotator/BuildAndPriceImageRotator';\r\nimport Numeral from 'numeral';\r\nimport {\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n    Progress\r\n} from 'reactstrap';\r\n\r\n\r\nclass BuildAndPrice extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.selectVehicle = this.selectVehicle.bind(this);\r\n        this.selectColor = this.selectColor.bind(this);\r\n        this.selectEngine = this.selectEngine.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.determineProgress = this.determineProgress.bind(this);\r\n        this.computePrice = this.computePrice.bind(this);\r\n        this.state = {\r\n            activeTab: '1',  //currently displayed tab (note it starts at 1 not 0)\r\n            selectedVehicle: \"jumper\", //holds the key to the selected vehicle\r\n            userHasSelectedVehicle: false,\r\n            selectedColor: 0, //holds the selected color index\r\n            selectedColorName: 'White Dwarf',\r\n            userHasSelectedColor: false,\r\n            selectedEngine: 0,  //holds the array index of the selected engine option\r\n            selectedEngineName: \"Alpha Centauri Mark II\",\r\n            userHasSelectedEngine: false,\r\n            modal: false, //controls the appearance of the modal\r\n            done: false,  //turns true when you have made all the selections\r\n            engineCost: 0,\r\n            msrp: 36000\r\n        };\r\n    }\r\n\r\n    determineProgress(){\r\n        let numberStepsCompleted = 0;\r\n        if(this.state.userHasSelectedVehicle){\r\n            numberStepsCompleted++;\r\n        }\r\n\r\n        if(this.state.userHasSelectedColor){\r\n            numberStepsCompleted++;\r\n        }\r\n\r\n        if(this.state.userHasSelectedEngine){\r\n            numberStepsCompleted++\r\n        }\r\n\r\n        const percentComplete = Math.ceil((numberStepsCompleted / 3) * 100);\r\n        return percentComplete;\r\n    }\r\n\r\n    selectVehicle(eventData){\r\n        //console.log(eventData.target.getAttribute('data-model'));\r\n        const selected = eventData.target.getAttribute('data-model');\r\n        const msrp = eventData.target.getAttribute('data-msrp');\r\n        this.setState({\r\n            activeTab: '2',\r\n            msrp: msrp,\r\n            userHasSelectedVehicle: true,\r\n            selectedVehicle: selected\r\n        });\r\n    }\r\n\r\n    selectColor(eventData){\r\n        const selected = eventData.target.getAttribute('data-color');\r\n        const selectedColorName = eventData.target.getAttribute('data-color-name')\r\n        this.setState({\r\n            activeTab: '3',\r\n            userHasSelectedColor: true,\r\n            selectedColor: Number(selected),\r\n            selectedColorName: selectedColorName\r\n        });\r\n    }\r\n\r\n    selectEngine(eventData){\r\n        const selected = eventData.target.getAttribute('data-engine');\r\n        const engineCost = eventData.target.getAttribute('data-engine-cost');\r\n        const engineName = eventData.target.getAttribute('data-engine-name');\r\n        this.setState({\r\n            userHasSelectedEngine: true,\r\n            selectedEngine: Number(selected), modal: true,\r\n            selectedEngineName: engineName,\r\n            engineCost: engineCost\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({modal: !this.state.modal});\r\n    }\r\n\r\n    computePrice(){\r\n        return Number(this.state.msrp) + Number(this.state.engineCost);\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (tab !== this.state.activeTab) {\r\n            this.setState({ activeTab: tab });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Build and Price</h3>\r\n                <BuildAndPriceImageRotator \r\n                  vehicleData = {this.props.vehicleData}\r\n                  selectedVehicle={this.state.selectedVehicle} \r\n                  colorIndex={this.state.selectedColor}\r\n                  colorName = {this.state.selectedColorName}\r\n                  cost={this.computePrice()}\r\n                  engineIndex={this.state.selectedEngine} />\r\n                  <h4>Color: {this.state.selectedColorName}</h4>\r\n                  <h5>Engine: {this.state.selectedEngineName}</h5>\r\n                  <h5>Price as configured: {Numeral(this.computePrice()).format('$0,0.00')}</h5>\r\n                <div className=\"tabPanel\">\r\n                    <Progress className=\"buildAndPriceProgress\" color=\"primary\" value={this.determineProgress()} />\r\n                    <Nav tabs>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                onClick={() => { this.toggle('1'); }}>\r\n                                Model\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '2' })}\r\n                                onClick={() => { this.toggle('2'); }}>\r\n                                Color\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '3' })}\r\n                                onClick={() => { this.toggle('3'); }}>\r\n                                Powerplant\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    <TabContent activeTab={this.state.activeTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            <Row>\r\n                                <Col sm=\"12\">\r\n                                    <ModelPicker \r\n                                    vehicleData = {this.props.vehicleData}\r\n                                    selectedVehicle = {this.state.selectedVehicle}\r\n                                    selectedColor = {this.state.selectedColor}\r\n                                    selectedEngine = {this.state.selectedEngine}\r\n                                    selectVehicle={this.selectVehicle} />\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <Row>\r\n                                <Col sm=\"12\">\r\n                                <ColorPicker\r\n                                    selectColor = {this.selectColor}\r\n                                    vehicleData = {this.props.vehicleData}\r\n                                    selectedVehicle = {this.state.selectedVehicle}\r\n                                    selectedColor = {this.state.selectedColor}\r\n                                    selectedEngine = {this.state.selectedEngine} />\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"3\">\r\n                            <Row>\r\n                                <Col sm=\"12\">\r\n                                    <EnginePicker \r\n                                      vehicleData = {this.props.vehicleData}\r\n                                      onEngineSelect = {this.selectEngine}\r\n                                      selectedVehicle = {this.state.selectedVehicle}\r\n                                      selectedColor = {this.state.selectedColor}\r\n                                      selectedEngine = {this.state.selectedEngine}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        \r\n                    </TabContent>\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Schedule a Test Flight!</ModalHeader>\r\n                        <ModalBody>\r\n                            <TestFlightForm />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick = {this.toggleModal}>Done!</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default BuildAndPrice;","import React, {Component} from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport TopNav from './components/TopNav';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DealerLocator from './components/DealerLocator';\nimport TestFlightForm from './components/TestFlightForm/TestFlightForm';\nimport VehicleDetail from './components/VehicleDetail/VehicleDetail';\nimport BuildAndPrice from './components/BuildAndPrice/BuildAndPrice';\nimport EngineSelector from './components/EngineSelector/EngineSelector';\n\n\n \n\n\n\nclass App extends Component{\n    \n    constructor(props){\n        super(props);\n            this.state = {vehicleData: null};\n}\ncomponentDidMount(){\n    Axios.get(\"http://localhost:3001/vehicles\")\n        .then(res => {\n            console.log(res.data);\n            this.setState({ vehicleData: res.data});     \n        })\n        .catch(err => console.log(err));\n}\n    \n    render() {\n    if(this.state.vehicleData){\n        return (\n        <Router>\n            <div className=\"App\">\n                <TopNav vehicleData = {this.state.vehicleData} />\n                <div className=\"contentAread\">\n                    <Route exact path='/' render={(props) => <Home {...props} vehicleData={this.state.vehicleData} />} />\n                    <Route path='/find-a-dealer' component = {DealerLocator} />\n                    <Route path='/schedule-test-flight' component={TestFlightForm} />\n                    <Route path= '/detail/:selectedVehicle' render={(props) => <VehicleDetail {...props} vehicleData = {this.state.vehicleData} /> } />\n                    <Route path= '/build-and-price' render={(props) => <BuildAndPrice {...props} vehicleData = {this.state.vehicleData} /> } />\n                    <Route path= 'engine-selector' render={(props) => <EngineSelector {...props} vehicleData = {this.state.vehicleData} /> } />\n                </div>\n                <Footer />\n            </div>\n        </Router>\n        );\n    } else {\n        return <h4>Loading Data...</h4>;\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}